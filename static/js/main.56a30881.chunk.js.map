{"version":3,"sources":["App.js","index.js"],"names":["App","useState","pokemon","setPokemon","pokemonData","setPokemonData","loading","setLoading","error","setError","suggestions","setSuggestions","showSuggestions","setShowSuggestions","flavorText","setFlavorText","baseStats","setBaseStats","evolutionChain","setEvolutionChain","fetchSuggestions","useCallback","a","axios","get","response","filtered","data","results","filter","p","name","toLowerCase","includes","slice","console","log","useEffect","length","getPokemon","toArray","url","res","push","stats","speciesUrl","id","speciesRes","flavor","flavor_text_entries","find","entry","language","flavor_text","replace","evoUrl","evolution_chain","evoRes","evoChain","evoData","chain","species","evolves_to","hasOwnProperty","Promise","all","map","evo","evoPoke","sprite","sprites","front_default","evoChainWithSprites","className","onSubmit","e","preventDefault","type","value","onChange","target","placeholder","autoComplete","suggestion","onClick","charAt","toUpperCase","toString","padStart","src","alt","onMouseOver","onMouseOut","types","index","stat","idx","style","width","base_stat","Math","round","height","weight","base_experience","abilities","ability","join","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.56a30881.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\n\nconst App = () => {\n  const [pokemon, setPokemon] = useState(\"\");\n  const [pokemonData, setPokemonData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [suggestions, setSuggestions] = useState([]);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [flavorText, setFlavorText] = useState(\"\");\n  const [baseStats, setBaseStats] = useState([]);\n  const [evolutionChain, setEvolutionChain] = useState([]);\n\n  const fetchSuggestions = useCallback(async () => {\n    try {\n      const response = await axios.get(`https://pokeapi.co/api/v2/pokemon?limit=151`);\n      const filtered = response.data.results.filter(p => \n        p.name.toLowerCase().includes(pokemon.toLowerCase())\n      );\n      setSuggestions(filtered.slice(0, 5));\n    } catch (e) {\n      console.log(e);\n    }\n  }, [pokemon]);\n\n  useEffect(() => {\n    if (pokemon.length > 2) {\n      fetchSuggestions();\n    } else {\n      setSuggestions([]);\n    }\n  }, [pokemon, fetchSuggestions]);\n\n  const handleChange = (e) => {\n    setPokemon(e.target.value.toLowerCase());\n    setShowSuggestions(true);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    getPokemon();\n  };\n\n  const handleSuggestionClick = (name) => {\n    setPokemon(name);\n    setShowSuggestions(false);\n    getPokemon(name);\n  };\n\n  const getPokemon = async (name = pokemon) => {\n    setLoading(true);\n    setError(\"\");\n    setFlavorText(\"\");\n    setBaseStats([]);\n    setEvolutionChain([]);\n    const toArray = [];\n    try {\n      // Fetch main Pokémon data\n      const url = `https://pokeapi.co/api/v2/pokemon/${name}`;\n      const res = await axios.get(url);\n      toArray.push(res.data);\n      setPokemonData(toArray);\n      setBaseStats(res.data.stats);\n\n      // Fetch species data for flavor text and evolution chain\n      const speciesUrl = `https://pokeapi.co/api/v2/pokemon-species/${res.data.id}`;\n      const speciesRes = await axios.get(speciesUrl);\n      // Get English flavor text\n      const flavor = speciesRes.data.flavor_text_entries.find(\n        entry => entry.language.name === \"en\"\n      );\n      setFlavorText(flavor ? flavor.flavor_text.replace(/\\f/g, ' ') : \"\");\n\n      // Fetch evolution chain\n      const evoUrl = speciesRes.data.evolution_chain.url;\n      const evoRes = await axios.get(evoUrl);\n      const evoChain = [];\n      let evoData = evoRes.data.chain;\n      do {\n        evoChain.push({\n          name: evoData.species.name,\n        });\n        evoData = evoData.evolves_to[0];\n      } while (evoData && evoData.hasOwnProperty('evolves_to'));\n      // Fetch sprites for each evolution\n      const evoChainWithSprites = await Promise.all(\n        evoChain.map(async (evo) => {\n          try {\n            const evoPoke = await axios.get(`https://pokeapi.co/api/v2/pokemon/${evo.name}`);\n            return {\n              name: evo.name,\n              sprite: evoPoke.data.sprites.front_default,\n            };\n          } catch {\n            return { name: evo.name, sprite: null };\n          }\n        })\n      );\n      setEvolutionChain(evoChainWithSprites);\n    } catch (e) {\n      setError(\"Pokemon not found! Try another name.\");\n      setPokemonData([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>PokéSearch</h1>\n      <form onSubmit={handleSubmit}>\n        <div className=\"search-container\">\n          <input\n            type=\"text\"\n            value={pokemon}\n            onChange={handleChange}\n            placeholder=\"Search for a Pokémon...\"\n            autoComplete=\"off\"\n          />\n          {showSuggestions && suggestions.length > 0 && (\n            <ul className=\"suggestions\">\n              {suggestions.map((suggestion) => (\n                <li\n                  key={suggestion.name}\n                  onClick={() => handleSuggestionClick(suggestion.name)}\n                >\n                  {suggestion.name}\n                </li>\n              ))}\n            </ul>\n          )}\n        </div>\n      </form>\n\n      {loading && <div className=\"loading\">Loading...</div>}\n      {error && <div className=\"error\">{error}</div>}\n\n      {pokemonData.map((data) => (\n        <div key={data.id} className=\"container\">\n          <div className=\"pokemon-header\">\n            <h2>{data.name.charAt(0).toUpperCase() + data.name.slice(1)}</h2>\n            <span className=\"pokemon-id\">#{data.id.toString().padStart(3, '0')}</span>\n          </div>\n          <div className=\"pokemon-image\">\n            <img \n              src={data.sprites[\"front_default\"]} \n              alt={data.name}\n              onMouseOver={e => e.target.src = data.sprites[\"back_default\"]}\n              onMouseOut={e => e.target.src = data.sprites[\"front_default\"]}\n            />\n          </div>\n          <div className=\"types\">\n            {data.types.map((type, index) => (\n              <span key={index} className={`type ${type.type.name}`}>\n                {type.type.name}\n              </span>\n            ))}\n          </div>\n\n          {/* Pokédex Entry */}\n          {flavorText && (\n            <div className=\"flavor-text\">\n              <em>{flavorText}</em>\n            </div>\n          )}\n\n          {/* Base Stats */}\n          {baseStats.length > 0 && (\n            <div className=\"base-stats\">\n              <h3>Base Stats</h3>\n              <table className=\"stats-table\">\n                <tbody>\n                  {baseStats.map((stat, idx) => (\n                    <tr key={idx}>\n                      <td>{stat.stat.name.replace('-', ' ').toUpperCase()}</td>\n                      <td>\n                        <div className=\"stat-bar-bg\">\n                          <div className=\"stat-bar\" style={{width: `${stat.base_stat/2}%`}}></div>\n                        </div>\n                      </td>\n                      <td>{stat.base_stat}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          )}\n\n          {/* Evolution Chain */}\n          {evolutionChain.length > 0 && (\n            <div className=\"evolution-chain\">\n              <h3>Evolution Chain</h3>\n              <div className=\"evo-list\">\n                {evolutionChain.map((evo, idx) => (\n                  <span key={evo.name} className=\"evo-item\">\n                    {evo.sprite && <img src={evo.sprite} alt={evo.name} className=\"evo-sprite\" />}\n                    <span className=\"evo-name\">{evo.name.charAt(0).toUpperCase() + evo.name.slice(1)}</span>\n                    {idx < evolutionChain.length - 1 && <span className=\"evo-arrow\">→</span>}\n                  </span>\n                ))}\n              </div>\n            </div>\n          )}\n\n          <div className=\"divTable\">\n            <div className=\"divTableBody\">\n              <div className=\"divTableRow\">\n                <div className=\"divTableCell\">Height</div>\n                <div className=\"divTableCell\">{Math.round(data.height * 3.9)}\"</div>\n              </div>\n              <div className=\"divTableRow\">\n                <div className=\"divTableCell\">Weight</div>\n                <div className=\"divTableCell\">{Math.round(data.weight / 4.3)} lbs</div>\n              </div>\n              <div className=\"divTableRow\">\n                <div className=\"divTableCell\">Base Experience</div>\n                <div className=\"divTableCell\">{data.base_experience}</div>\n              </div>\n              <div className=\"divTableRow\">\n                <div className=\"divTableCell\">Abilities</div>\n                <div className=\"divTableCell\">\n                  {data.abilities.map(ability => \n                    ability.ability.name.replace('-', ' ')\n                  ).join(', ')}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}