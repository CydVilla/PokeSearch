{"version":3,"sources":["App.js","index.js"],"names":["App","useState","pokemon","setPokemon","pokemonData","setPokemonData","loading","setLoading","error","setError","suggestions","setSuggestions","showSuggestions","setShowSuggestions","flavorText","setFlavorText","baseStats","setBaseStats","evolutionChain","setEvolutionChain","showShiny","setShowShiny","weak","resist","immune","typeRelations","setTypeRelations","moveList","setMoveList","fetchSuggestions","useCallback","a","axios","get","response","filtered","data","results","filter","p","name","toLowerCase","includes","slice","console","log","useEffect","length","getPokemon","toArray","url","res","push","stats","speciesUrl","id","speciesRes","flavor","flavor_text_entries","find","entry","language","flavor_text","replace","evoUrl","evolution_chain","evoRes","evoChain","evoData","chain","species","evolves_to","hasOwnProperty","Promise","all","map","evo","evoPoke","sprite","sprites","front_default","evoChainWithSprites","typeUrls","types","t","type","typeData","doubleDamageFrom","halfDamageFrom","noDamageFrom","forEach","td","concat","damage_relations","double_damage_from","half_damage_from","no_damage_from","Set","levelUpMoves","moves","m","version_group_details","some","vgd","move_learn_method","move","level","level_learned_at","sort","b","className","onSubmit","e","preventDefault","value","onChange","target","placeholder","autoComplete","suggestion","onClick","charAt","toUpperCase","toString","padStart","src","alt","onMouseOver","onMouseOut","s","index","join","stat","idx","style","width","base_stat","Math","round","height","weight","base_experience","abilities","ability","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAgTeA,EA5SH,WACV,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAsCF,mBAAS,IAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAA0BN,mBAAS,IAAnC,mBAAOO,EAAP,KAAcC,EAAd,KACA,EAAsCR,mBAAS,IAA/C,mBAAOS,EAAP,KAAoBC,EAApB,KACA,EAA8CV,oBAAS,GAAvD,mBAAOW,EAAP,KAAwBC,EAAxB,KACA,EAAoCZ,mBAAS,IAA7C,mBAAOa,EAAP,KAAmBC,EAAnB,KACA,EAAkCd,mBAAS,IAA3C,mBAAOe,EAAP,KAAkBC,EAAlB,KACA,EAA4ChB,mBAAS,IAArD,mBAAOiB,EAAP,KAAuBC,EAAvB,KACA,EAAkClB,oBAAS,GAA3C,mBAAOmB,EAAP,KAAkBC,EAAlB,KACA,EAA0CpB,mBAAS,CAAEqB,KAAM,GAAIC,OAAQ,GAAIC,OAAQ,KAAnF,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAAgCzB,mBAAS,IAAzC,mBAAO0B,EAAP,KAAiBC,GAAjB,KAEMC,GAAmBC,sBAAW,sBAAC,8BAAAC,EAAA,+EAEVC,IAAMC,IAAN,+CAFU,OAE3BC,EAF2B,OAG3BC,EAAWD,EAASE,KAAKC,QAAQC,QAAO,SAAAC,GAAC,OAC7CA,EAAEC,KAAKC,cAAcC,SAASxC,EAAQuC,kBAExC9B,EAAewB,EAASQ,MAAM,EAAG,IANA,gDAQjCC,QAAQC,IAAR,MARiC,yDAUlC,CAAC3C,IAEJ4C,qBAAU,WACJ5C,EAAQ6C,OAAS,EACnBlB,KAEAlB,EAAe,MAEhB,CAACT,EAAS2B,KAEb,IAgBMmB,GAAU,uCAAG,gFAAAjB,EAAA,6DAAOS,EAAP,+BAActC,EAC/BK,GAAW,GACXE,EAAS,IACTM,EAAc,IACdE,EAAa,IACbE,EAAkB,IAClBE,GAAa,GACbK,EAAiB,CAAEJ,KAAM,GAAIC,OAAQ,GAAIC,OAAQ,KACjDI,GAAY,IACNqB,EAAU,GATC,UAYTC,EAZS,4CAYkCV,GAZlC,UAaGR,IAAMC,IAAIiB,GAbb,eAaTC,EAbS,OAcfF,EAAQG,KAAKD,EAAIf,MACjB/B,EAAe4C,GACfhC,EAAakC,EAAIf,KAAKiB,OAGhBC,EAnBS,oDAmBiDH,EAAIf,KAAKmB,IAnB1D,UAoBUvB,IAAMC,IAAIqB,GApBpB,eAoBTE,EApBS,OAsBTC,EAASD,EAAWpB,KAAKsB,oBAAoBC,MACjD,SAAAC,GAAK,MAA4B,OAAxBA,EAAMC,SAASrB,QAE1BzB,EAAc0C,EAASA,EAAOK,YAAYC,QAAQ,MAAO,KAAO,IAG1DC,EAASR,EAAWpB,KAAK6B,gBAAgBf,IA5BhC,UA6BMlB,IAAMC,IAAI+B,GA7BhB,QA6BTE,EA7BS,OA8BTC,EAAW,GACbC,EAAUF,EAAO9B,KAAKiC,MAC1B,GACEF,EAASf,KAAK,CACZZ,KAAM4B,EAAQE,QAAQ9B,OAExB4B,EAAUA,EAAQG,WAAW,SACtBH,GAAWA,EAAQI,eAAe,eArC5B,iBAuCmBC,QAAQC,IACxCP,EAASQ,IAAT,uCAAa,WAAOC,GAAP,eAAA7C,EAAA,+EAEaC,IAAMC,IAAN,4CAA+C2C,EAAIpC,OAFhE,cAEHqC,EAFG,yBAGF,CACLrC,KAAMoC,EAAIpC,KACVsC,OAAQD,EAAQzC,KAAK2C,QAAQC,gBALtB,yDAQF,CAAExC,KAAMoC,EAAIpC,KAAMsC,OAAQ,OARxB,yDAAb,wDAxCa,eAuCTG,EAvCS,OAoDf9D,EAAkB8D,GAGZC,EAAW/B,EAAIf,KAAK+C,MAAMR,KAAI,SAAAS,GAAC,OAAIA,EAAEC,KAAKnC,OAvDjC,UAwDQuB,QAAQC,IAAIQ,EAASP,KAAI,SAAAzB,GAAG,OAAIlB,IAAMC,IAAIiB,OAxDlD,QAwDToC,EAxDS,OA0DXC,EAAmB,GACnBC,EAAiB,GACjBC,EAAe,GACnBH,EAASI,SAAQ,SAAAC,GACfJ,EAAmBA,EAAiBK,OAAOD,EAAGvD,KAAKyD,iBAAiBC,mBAAmBnB,KAAI,SAAAS,GAAC,OAAIA,EAAE5C,SAClGgD,EAAiBA,EAAeI,OAAOD,EAAGvD,KAAKyD,iBAAiBE,iBAAiBpB,KAAI,SAAAS,GAAC,OAAIA,EAAE5C,SAC5FiD,EAAeA,EAAaG,OAAOD,EAAGvD,KAAKyD,iBAAiBG,eAAerB,KAAI,SAAAS,GAAC,OAAIA,EAAE5C,YAGpFlB,EAAOiE,EAAiBjD,QAAO,SAAA8C,GAAC,OAAKK,EAAa/C,SAAS0C,MAC3D7D,EAASiE,EAAelD,QAAO,SAAA8C,GAAC,OAAKK,EAAa/C,SAAS0C,KAAOG,EAAiB7C,SAAS0C,MAC5F5D,EArEW,YAqEE,IAAIyE,IAAIR,IACzBnE,EAAI,YAAO,IAAI2E,IAAI3E,IACnBC,EAAM,YAAO,IAAI0E,IAAI1E,IACrBG,EAAiB,CAAEJ,OAAMC,SAAQC,WAG3B0E,EAAe/C,EAAIf,KAAK+D,MAC3B7D,QAAO,SAAA8D,GAAC,OAAIA,EAAEC,sBAAsBC,MAAK,SAAAC,GAAG,MAAmC,aAA/BA,EAAIC,kBAAkBhE,WACtEmC,KAAI,SAAAyB,GACH,IAAMG,EAAMH,EAAEC,sBAAsB1C,MAAK,SAAA4C,GAAG,MAAmC,aAA/BA,EAAIC,kBAAkBhE,QACtE,MAAO,CACLA,KAAM4D,EAAEK,KAAKjE,KACbkE,MAAOH,EAAMA,EAAII,iBAAmB,MAGvCC,MAAK,SAAC7E,EAAG8E,GAAJ,OAAU9E,EAAE2E,MAAQG,EAAEH,SAC3B/D,MAAM,EAAG,GACZf,GAAYsE,GAtFG,mDAwFfzF,EAAS,wCACTJ,EAAe,IAzFA,yBA2FfE,GAAW,GA3FI,8EAAH,qDA+FhB,OACE,sBAAKuG,UAAU,MAAf,UACE,+CACA,sBAAMC,SA7GW,SAACC,GACpBA,EAAEC,iBACFjE,MA2GE,SACE,sBAAK8D,UAAU,mBAAf,UACE,uBACEzB,KAAK,OACL6B,MAAOhH,EACPiH,SAvHW,SAACH,GACpB7G,EAAW6G,EAAEI,OAAOF,MAAMzE,eAC1B5B,GAAmB,IAsHXwG,YAAY,6BACZC,aAAa,QAEd1G,GAAmBF,EAAYqC,OAAS,GACvC,oBAAI+D,UAAU,cAAd,SACGpG,EAAYiE,KAAI,SAAC4C,GAAD,OACf,oBAEEC,QAAS,kBAtHMhF,EAsHsB+E,EAAW/E,KArH9DrC,EAAWqC,GACX3B,GAAmB,QACnBmC,GAAWR,GAHiB,IAACA,GAoHjB,SAIG+E,EAAW/E,MAHP+E,EAAW/E,gBAW3BlC,GAAW,qBAAKwG,UAAU,UAAf,wBACXtG,GAAS,qBAAKsG,UAAU,QAAf,SAAwBtG,IAEjCJ,EAAYuE,KAAI,SAACvC,GAAD,OACf,sBAAmB0E,UAAU,YAA7B,UACE,sBAAKA,UAAU,iBAAf,UACE,6BAAK1E,EAAKI,KAAKiF,OAAO,GAAGC,cAAgBtF,EAAKI,KAAKG,MAAM,KACzD,uBAAMmE,UAAU,aAAhB,cAA+B1E,EAAKmB,GAAGoE,WAAWC,SAAS,EAAG,WAEhE,sBAAKd,UAAU,gBAAf,UACE,qBACEe,IAAKzG,EAAYgB,EAAK2C,QAAL,YAA8B3C,EAAK2C,QAAL,cAC/C+C,IAAK1F,EAAKI,KACVuF,YAAa,SAAAf,GAAC,OAAIA,EAAEI,OAAOS,IAAMzG,EAAYgB,EAAK2C,QAAL,WAA6B3C,EAAK2C,QAAL,cAC1EiD,WAAY,SAAAhB,GAAC,OAAIA,EAAEI,OAAOS,IAAMzG,EAAYgB,EAAK2C,QAAL,YAA8B3C,EAAK2C,QAAL,iBAE5E,wBAAQ+B,UAAU,eAAeU,QAAS,kBAAMnG,GAAa,SAAA4G,GAAC,OAAKA,MAAnE,SACG7G,EAAY,cAAgB,kBAGjC,qBAAK0F,UAAU,QAAf,SACG1E,EAAK+C,MAAMR,KAAI,SAACU,EAAM6C,GAAP,OACd,sBAAkBpB,UAAS,eAAUzB,EAAKA,KAAK7C,MAA/C,SACG6C,EAAKA,KAAK7C,MADF0F,QAOf,sBAAKpB,UAAU,iBAAf,UACE,+CACA,sBAAKA,UAAU,sBAAf,UACE,iCAAM,8CAAN,IAAiCrF,EAAcH,KAAKyB,OAAStB,EAAcH,KAAK6G,KAAK,MAAQ,UAAc,uBAC3G,iCAAM,mDAAN,IAAsC1G,EAAcF,OAAOwB,OAAStB,EAAcF,OAAO4G,KAAK,MAAQ,UAAc,uBACpH,iCAAM,gDAAN,IAAmC1G,EAAcD,OAAOuB,OAAStB,EAAcD,OAAO2G,KAAK,MAAQ,gBAKtGrH,GACC,qBAAKgG,UAAU,cAAf,SACE,6BAAKhG,MAKRE,EAAU+B,OAAS,GAClB,sBAAK+D,UAAU,aAAf,UACE,4CACA,uBAAOA,UAAU,cAAjB,SACE,gCACG9F,EAAU2D,KAAI,SAACyD,EAAMC,GAAP,OACb,+BACE,6BAAKD,EAAKA,KAAK5F,KAAKuB,QAAQ,IAAK,KAAK2D,gBACtC,6BACE,qBAAKZ,UAAU,cAAf,SACE,qBAAKA,UAAU,WAAWwB,MAAO,CAACC,MAAM,GAAD,OAAKH,EAAKI,UAAU,EAApB,YAG3C,6BAAKJ,EAAKI,cAPHH,aAgBlBnH,EAAe6B,OAAS,GACvB,sBAAK+D,UAAU,kBAAf,UACE,iDACA,qBAAKA,UAAU,WAAf,SACG5F,EAAeyD,KAAI,SAACC,EAAKyD,GAAN,OAClB,uBAAqBvB,UAAU,WAA/B,UACGlC,EAAIE,QAAU,qBAAK+C,IAAKjD,EAAIE,OAAQgD,IAAKlD,EAAIpC,KAAMsE,UAAU,eAC9D,sBAAMA,UAAU,WAAhB,SAA4BlC,EAAIpC,KAAKiF,OAAO,GAAGC,cAAgB9C,EAAIpC,KAAKG,MAAM,KAC7E0F,EAAMnH,EAAe6B,OAAS,GAAK,sBAAM+D,UAAU,YAAhB,sBAH3BlC,EAAIpC,cAWtBb,EAASoB,OAAS,GACjB,sBAAK+D,UAAU,YAAf,UACE,0DACA,6BACGnF,EAASgD,KAAI,SAAC8B,EAAM4B,GAAP,OACZ,+BACE,sBAAMvB,UAAU,YAAhB,SAA6BL,EAAKjE,KAAKuB,QAAQ,IAAK,OACnD0C,EAAKC,MAAQ,GAAK,uBAAMI,UAAU,aAAhB,mBAAoCL,EAAKC,MAAzC,SAFZD,EAAKjE,cAStB,qBAAKsE,UAAU,WAAf,SACE,sBAAKA,UAAU,eAAf,UACE,sBAAKA,UAAU,cAAf,UACE,qBAAKA,UAAU,eAAf,oBACA,sBAAKA,UAAU,eAAf,UAA+B2B,KAAKC,MAAoB,IAAdtG,EAAKuG,QAA/C,UAEF,sBAAK7B,UAAU,cAAf,UACE,qBAAKA,UAAU,eAAf,oBACA,sBAAKA,UAAU,eAAf,UAA+B2B,KAAKC,MAAMtG,EAAKwG,OAAS,KAAxD,aAEF,sBAAK9B,UAAU,cAAf,UACE,qBAAKA,UAAU,eAAf,6BACA,qBAAKA,UAAU,eAAf,SAA+B1E,EAAKyG,qBAEtC,sBAAK/B,UAAU,cAAf,UACE,qBAAKA,UAAU,eAAf,uBACA,qBAAKA,UAAU,eAAf,SACG1E,EAAK0G,UAAUnE,KAAI,SAAAoE,GAAO,OACzBA,EAAQA,QAAQvG,KAAKuB,QAAQ,IAAK,QAClCoE,KAAK,kBAjHP/F,EAAKmB,WC/KvByF,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2446c87a.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\n\nconst App = () => {\n  const [pokemon, setPokemon] = useState(\"\");\n  const [pokemonData, setPokemonData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [suggestions, setSuggestions] = useState([]);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [flavorText, setFlavorText] = useState(\"\");\n  const [baseStats, setBaseStats] = useState([]);\n  const [evolutionChain, setEvolutionChain] = useState([]);\n  const [showShiny, setShowShiny] = useState(false);\n  const [typeRelations, setTypeRelations] = useState({ weak: [], resist: [], immune: [] });\n  const [moveList, setMoveList] = useState([]);\n\n  const fetchSuggestions = useCallback(async () => {\n    try {\n      const response = await axios.get(`https://pokeapi.co/api/v2/pokemon?limit=151`);\n      const filtered = response.data.results.filter(p => \n        p.name.toLowerCase().includes(pokemon.toLowerCase())\n      );\n      setSuggestions(filtered.slice(0, 5));\n    } catch (e) {\n      console.log(e);\n    }\n  }, [pokemon]);\n\n  useEffect(() => {\n    if (pokemon.length > 2) {\n      fetchSuggestions();\n    } else {\n      setSuggestions([]);\n    }\n  }, [pokemon, fetchSuggestions]);\n\n  const handleChange = (e) => {\n    setPokemon(e.target.value.toLowerCase());\n    setShowSuggestions(true);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    getPokemon();\n  };\n\n  const handleSuggestionClick = (name) => {\n    setPokemon(name);\n    setShowSuggestions(false);\n    getPokemon(name);\n  };\n\n  const getPokemon = async (name = pokemon) => {\n    setLoading(true);\n    setError(\"\");\n    setFlavorText(\"\");\n    setBaseStats([]);\n    setEvolutionChain([]);\n    setShowShiny(false);\n    setTypeRelations({ weak: [], resist: [], immune: [] });\n    setMoveList([]);\n    const toArray = [];\n    try {\n      // Fetch main Pokémon data\n      const url = `https://pokeapi.co/api/v2/pokemon/${name}`;\n      const res = await axios.get(url);\n      toArray.push(res.data);\n      setPokemonData(toArray);\n      setBaseStats(res.data.stats);\n\n      // Fetch species data for flavor text and evolution chain\n      const speciesUrl = `https://pokeapi.co/api/v2/pokemon-species/${res.data.id}`;\n      const speciesRes = await axios.get(speciesUrl);\n      // Get English flavor text\n      const flavor = speciesRes.data.flavor_text_entries.find(\n        entry => entry.language.name === \"en\"\n      );\n      setFlavorText(flavor ? flavor.flavor_text.replace(/\\f/g, ' ') : \"\");\n\n      // Fetch evolution chain\n      const evoUrl = speciesRes.data.evolution_chain.url;\n      const evoRes = await axios.get(evoUrl);\n      const evoChain = [];\n      let evoData = evoRes.data.chain;\n      do {\n        evoChain.push({\n          name: evoData.species.name,\n        });\n        evoData = evoData.evolves_to[0];\n      } while (evoData && evoData.hasOwnProperty('evolves_to'));\n      // Fetch sprites for each evolution\n      const evoChainWithSprites = await Promise.all(\n        evoChain.map(async (evo) => {\n          try {\n            const evoPoke = await axios.get(`https://pokeapi.co/api/v2/pokemon/${evo.name}`);\n            return {\n              name: evo.name,\n              sprite: evoPoke.data.sprites.front_default,\n            };\n          } catch {\n            return { name: evo.name, sprite: null };\n          }\n        })\n      );\n      setEvolutionChain(evoChainWithSprites);\n\n      // Type weaknesses/resistances\n      const typeUrls = res.data.types.map(t => t.type.url);\n      const typeData = await Promise.all(typeUrls.map(url => axios.get(url)));\n      // Collect all relations\n      let doubleDamageFrom = [];\n      let halfDamageFrom = [];\n      let noDamageFrom = [];\n      typeData.forEach(td => {\n        doubleDamageFrom = doubleDamageFrom.concat(td.data.damage_relations.double_damage_from.map(t => t.name));\n        halfDamageFrom = halfDamageFrom.concat(td.data.damage_relations.half_damage_from.map(t => t.name));\n        noDamageFrom = noDamageFrom.concat(td.data.damage_relations.no_damage_from.map(t => t.name));\n      });\n      // Remove duplicates and handle overlaps\n      let weak = doubleDamageFrom.filter(t => !noDamageFrom.includes(t));\n      let resist = halfDamageFrom.filter(t => !noDamageFrom.includes(t) && !doubleDamageFrom.includes(t));\n      let immune = [...new Set(noDamageFrom)];\n      weak = [...new Set(weak)];\n      resist = [...new Set(resist)];\n      setTypeRelations({ weak, resist, immune });\n\n      // Move list: first 5 level-up moves\n      const levelUpMoves = res.data.moves\n        .filter(m => m.version_group_details.some(vgd => vgd.move_learn_method.name === \"level-up\"))\n        .map(m => {\n          const vgd = m.version_group_details.find(vgd => vgd.move_learn_method.name === \"level-up\");\n          return {\n            name: m.move.name,\n            level: vgd ? vgd.level_learned_at : 0\n          };\n        })\n        .sort((a, b) => a.level - b.level)\n        .slice(0, 5);\n      setMoveList(levelUpMoves);\n    } catch (e) {\n      setError(\"Pokemon not found! Try another name.\");\n      setPokemonData([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>PokéSearch</h1>\n      <form onSubmit={handleSubmit}>\n        <div className=\"search-container\">\n          <input\n            type=\"text\"\n            value={pokemon}\n            onChange={handleChange}\n            placeholder=\"Search for a Pokémon...\"\n            autoComplete=\"off\"\n          />\n          {showSuggestions && suggestions.length > 0 && (\n            <ul className=\"suggestions\">\n              {suggestions.map((suggestion) => (\n                <li\n                  key={suggestion.name}\n                  onClick={() => handleSuggestionClick(suggestion.name)}\n                >\n                  {suggestion.name}\n                </li>\n              ))}\n            </ul>\n          )}\n        </div>\n      </form>\n\n      {loading && <div className=\"loading\">Loading...</div>}\n      {error && <div className=\"error\">{error}</div>}\n\n      {pokemonData.map((data) => (\n        <div key={data.id} className=\"container\">\n          <div className=\"pokemon-header\">\n            <h2>{data.name.charAt(0).toUpperCase() + data.name.slice(1)}</h2>\n            <span className=\"pokemon-id\">#{data.id.toString().padStart(3, '0')}</span>\n          </div>\n          <div className=\"pokemon-image\">\n            <img \n              src={showShiny ? data.sprites[\"front_shiny\"] : data.sprites[\"front_default\"]} \n              alt={data.name}\n              onMouseOver={e => e.target.src = showShiny ? data.sprites[\"back_shiny\"] : data.sprites[\"back_default\"]}\n              onMouseOut={e => e.target.src = showShiny ? data.sprites[\"front_shiny\"] : data.sprites[\"front_default\"]}\n            />\n            <button className=\"shiny-toggle\" onClick={() => setShowShiny(s => !s)}>\n              {showShiny ? \"Show Normal\" : \"Show Shiny\"}\n            </button>\n          </div>\n          <div className=\"types\">\n            {data.types.map((type, index) => (\n              <span key={index} className={`type ${type.type.name}`}>\n                {type.type.name}\n              </span>\n            ))}\n          </div>\n\n          {/* Type Weaknesses/Resistances */}\n          <div className=\"type-relations\">\n            <h3>Type Matchups</h3>\n            <div className=\"type-relations-list\">\n              <span><strong>Weak to:</strong> {typeRelations.weak.length ? typeRelations.weak.join(\", \") : \"None\"}</span><br/>\n              <span><strong>Resistant to:</strong> {typeRelations.resist.length ? typeRelations.resist.join(\", \") : \"None\"}</span><br/>\n              <span><strong>Immune to:</strong> {typeRelations.immune.length ? typeRelations.immune.join(\", \") : \"None\"}</span>\n            </div>\n          </div>\n\n          {/* Pokédex Entry */}\n          {flavorText && (\n            <div className=\"flavor-text\">\n              <em>{flavorText}</em>\n            </div>\n          )}\n\n          {/* Base Stats */}\n          {baseStats.length > 0 && (\n            <div className=\"base-stats\">\n              <h3>Base Stats</h3>\n              <table className=\"stats-table\">\n                <tbody>\n                  {baseStats.map((stat, idx) => (\n                    <tr key={idx}>\n                      <td>{stat.stat.name.replace('-', ' ').toUpperCase()}</td>\n                      <td>\n                        <div className=\"stat-bar-bg\">\n                          <div className=\"stat-bar\" style={{width: `${stat.base_stat/2}%`}}></div>\n                        </div>\n                      </td>\n                      <td>{stat.base_stat}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          )}\n\n          {/* Evolution Chain */}\n          {evolutionChain.length > 0 && (\n            <div className=\"evolution-chain\">\n              <h3>Evolution Chain</h3>\n              <div className=\"evo-list\">\n                {evolutionChain.map((evo, idx) => (\n                  <span key={evo.name} className=\"evo-item\">\n                    {evo.sprite && <img src={evo.sprite} alt={evo.name} className=\"evo-sprite\" />}\n                    <span className=\"evo-name\">{evo.name.charAt(0).toUpperCase() + evo.name.slice(1)}</span>\n                    {idx < evolutionChain.length - 1 && <span className=\"evo-arrow\">→</span>}\n                  </span>\n                ))}\n              </div>\n            </div>\n          )}\n\n          {/* Move List */}\n          {moveList.length > 0 && (\n            <div className=\"move-list\">\n              <h3>Notable Moves (Level-up)</h3>\n              <ul>\n                {moveList.map((move, idx) => (\n                  <li key={move.name}>\n                    <span className=\"move-name\">{move.name.replace(\"-\", \" \")}</span>\n                    {move.level > 0 && <span className=\"move-level\"> (Lv. {move.level})</span>}\n                  </li>\n                ))}\n              </ul>\n            </div>\n          )}\n\n          <div className=\"divTable\">\n            <div className=\"divTableBody\">\n              <div className=\"divTableRow\">\n                <div className=\"divTableCell\">Height</div>\n                <div className=\"divTableCell\">{Math.round(data.height * 3.9)}\"</div>\n              </div>\n              <div className=\"divTableRow\">\n                <div className=\"divTableCell\">Weight</div>\n                <div className=\"divTableCell\">{Math.round(data.weight / 4.3)} lbs</div>\n              </div>\n              <div className=\"divTableRow\">\n                <div className=\"divTableCell\">Base Experience</div>\n                <div className=\"divTableCell\">{data.base_experience}</div>\n              </div>\n              <div className=\"divTableRow\">\n                <div className=\"divTableCell\">Abilities</div>\n                <div className=\"divTableCell\">\n                  {data.abilities.map(ability => \n                    ability.ability.name.replace('-', ' ')\n                  ).join(', ')}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}