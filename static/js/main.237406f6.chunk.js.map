{"version":3,"sources":["App.js","index.js"],"names":["App","useState","pokemon","setPokemon","pokemonData","setPokemonData","setPokemonType","loading","setLoading","error","setError","suggestions","setSuggestions","showSuggestions","setShowSuggestions","useEffect","length","fetchSuggestions","a","axios","get","response","filtered","data","results","filter","p","name","toLowerCase","includes","slice","console","log","getPokemon","toArray","url","res","push","types","type","className","onSubmit","e","preventDefault","value","onChange","target","placeholder","autoComplete","map","suggestion","onClick","charAt","toUpperCase","id","toString","padStart","src","sprites","alt","onMouseOver","onMouseOut","index","Math","round","height","weight","base_experience","abilities","ability","replace","join","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.237406f6.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\n\nconst App = () => {\n  const [pokemon, setPokemon] = useState(\"\");\n  const [pokemonData, setPokemonData] = useState([]);\n  const [pokemonType, setPokemonType] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [suggestions, setSuggestions] = useState([]);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n\n  useEffect(() => {\n    if (pokemon.length > 2) {\n      fetchSuggestions();\n    } else {\n      setSuggestions([]);\n    }\n  }, [pokemon]);\n\n  const fetchSuggestions = async () => {\n    try {\n      const response = await axios.get(`https://pokeapi.co/api/v2/pokemon?limit=151`);\n      const filtered = response.data.results.filter(p => \n        p.name.toLowerCase().includes(pokemon.toLowerCase())\n      );\n      setSuggestions(filtered.slice(0, 5));\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (e) => {\n    setPokemon(e.target.value.toLowerCase());\n    setShowSuggestions(true);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    getPokemon();\n  };\n\n  const handleSuggestionClick = (name) => {\n    setPokemon(name);\n    setShowSuggestions(false);\n    getPokemon(name);\n  };\n\n  const getPokemon = async (name = pokemon) => {\n    setLoading(true);\n    setError(\"\");\n    const toArray = [];\n    try {\n      const url = `https://pokeapi.co/api/v2/pokemon/${name}`;\n      const res = await axios.get(url);\n      toArray.push(res.data);\n      setPokemonType(res.data.types[0].type.name);\n      setPokemonData(toArray);\n    } catch (e) {\n      setError(\"Pokemon not found! Try another name.\");\n      setPokemonData([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>PokéSearch</h1>\n      <form onSubmit={handleSubmit}>\n        <div className=\"search-container\">\n          <input\n            type=\"text\"\n            value={pokemon}\n            onChange={handleChange}\n            placeholder=\"Search for a Pokémon...\"\n            autoComplete=\"off\"\n          />\n          {showSuggestions && suggestions.length > 0 && (\n            <ul className=\"suggestions\">\n              {suggestions.map((suggestion) => (\n                <li\n                  key={suggestion.name}\n                  onClick={() => handleSuggestionClick(suggestion.name)}\n                >\n                  {suggestion.name}\n                </li>\n              ))}\n            </ul>\n          )}\n        </div>\n      </form>\n\n      {loading && <div className=\"loading\">Loading...</div>}\n      {error && <div className=\"error\">{error}</div>}\n\n      {pokemonData.map((data) => (\n        <div key={data.id} className=\"container\">\n          <div className=\"pokemon-header\">\n            <h2>{data.name.charAt(0).toUpperCase() + data.name.slice(1)}</h2>\n            <span className=\"pokemon-id\">#{data.id.toString().padStart(3, '0')}</span>\n          </div>\n          \n          <div className=\"pokemon-image\">\n            <img \n              src={data.sprites[\"front_default\"]} \n              alt={data.name}\n              onMouseOver={e => e.target.src = data.sprites[\"back_default\"]}\n              onMouseOut={e => e.target.src = data.sprites[\"front_default\"]}\n            />\n          </div>\n\n          <div className=\"types\">\n            {data.types.map((type, index) => (\n              <span key={index} className={`type ${type.type.name}`}>\n                {type.type.name}\n              </span>\n            ))}\n          </div>\n\n          <div className=\"divTable\">\n            <div className=\"divTableBody\">\n              <div className=\"divTableRow\">\n                <div className=\"divTableCell\">Height</div>\n                <div className=\"divTableCell\">{Math.round(data.height * 3.9)}\"</div>\n              </div>\n              <div className=\"divTableRow\">\n                <div className=\"divTableCell\">Weight</div>\n                <div className=\"divTableCell\">{Math.round(data.weight / 4.3)} lbs</div>\n              </div>\n              <div className=\"divTableRow\">\n                <div className=\"divTableCell\">Base Experience</div>\n                <div className=\"divTableCell\">{data.base_experience}</div>\n              </div>\n              <div className=\"divTableRow\">\n                <div className=\"divTableCell\">Abilities</div>\n                <div className=\"divTableCell\">\n                  {data.abilities.map(ability => \n                    ability.ability.name.replace('-', ' ')\n                  ).join(', ')}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}